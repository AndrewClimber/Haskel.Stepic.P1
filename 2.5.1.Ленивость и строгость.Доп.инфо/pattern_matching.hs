{-
Сопоставление с образцом. Pattern matching
-}
-- ф-я переставляющая элемент пары
swap :: (a, b) -> (b, a)
swap (x, y) = (y, x)
{- выражение (x, y) - это образец. 

При вызове 
*Main> swap (5, True)
(True,5)
Происходит сопоставление с образцом :
- проверяется, что конструктор (,) - подходящий;
-  формальные переменные x и y связываются со значениями 5 и True
- и дальше происходит вычисление (5, True) в (True, 5)
-}

{- реализация swap без сопоставления с образцом. есть 2-ве ф-и, которые элиминируют пару
fst и snd.  Стиль написания с помощью элиминаторов.
-}
swap' :: (b, a) -> (a, b)
swap' p = (snd p, fst p)
{- Но в Haskell есть другой м-м, который заменят элиминаторы. (см. 1-й swap)
Т.е. swap' - передается пара сразу , напрямую переменная p типа (b,a) без конструктора. 
А в swap передается конкретно x и y - передается в конструктор (,).
x и y - это как образцы для сопоставления.
-}

