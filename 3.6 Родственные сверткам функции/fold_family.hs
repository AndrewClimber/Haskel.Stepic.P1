module Demo where
import Prelude hiding (foldr1,foldl1)
{-
Есть класс алгоритмов для которого сложно определить поведение на пустом списке.
Например - алгоритмы поиска наибольшего и наименьшего в списке. Непонятно какое значение
нухно вернуть в случае пустого списка.
Для этого введены функции похожие на свертку, но с другим поведением.
Это foldl1 , foldr1 . Они на пустом списке возвращают сообщение об ошибке. 
А в качестве инициализирующкго значения правая свертка использует последний элемент списка, а
левая свертка - первый элемент списка.
-}
foldr1 :: (a -> a -> a) -> [a] -> a
foldr1 _ [x] = x -- на одноэлементном списке. x -одновременно и инициализирующее значение и терминирующее условие, результат.
foldr1 f (x:xs) = f x (foldr1 f xs) -- случай список содержит больше 1-го элемента.
foldr1 _ [] = error "foldr1: EmptyList" -- список пустой.

foldl1 :: (a -> a -> a) -> [a] -> a
foldl1 f (x:xs) = foldl f x xs -- для непустого списка ничего лишнего делать не надо. инициализир.знач - 1-й эл-т.
foldl1 _ [] = error "foldr1: EmptyList"

maximum :: (Ord a) => [a] -> a
maximum = foldl1 max
