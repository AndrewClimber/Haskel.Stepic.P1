{-
в отличие от левой свертки . левое сканирование может работать на бесконечных списках. т.к. работает оекурсивно - конструируя список на
каждом шаге рекурсии.
Примеры использования scanl
-}

module Demo where

import Data.List (scanl)

-- факториал на бесконечном списке
facs :: (Num a, Enum a) => [a]
{-
*Demo> facs !! 5
120
-}

partialSums :: Num a => [a] -> [a]
partialSums = scanl (+) 0
{-
*Demo> partialSums [1..10]
[0,1,3,6,10,15,21,28,36,45,55]
частичное суммирование. с помощью него можно оценивать сходимость рядов.
частичные суммы обратных факториалов :
partialSums . map (**(-1)) $ facs

*Demo> take 10 . partialSums . map (**(-1)) $ facs
[0.0,1.0,2.0,2.5,2.6666666666666665,2.708333333333333,2.7166666666666663,2.7180555555555554,2.7182539682539684,2.71827876984127]
Видно, что частичные суммы обратных факториалов стремятся к числу E . Сходятся к числу E
-}